@using NubeBooks.Core.DTO
@using System.Globalization;
@model IList<NubeBooks.Core.DTO.CategoriaDTO>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section styles{
    @Styles.Render("~/Content/themes/admin/js/nestable/nestable.css")

    <style type="text/css">
        .dd3-item > button {
            margin-left: 0px;
        }
    </style>
}
@section scripts{
    @Scripts.Render("~/Content/themes/admin/js/nestable/jquery.nestable.js")
    @Scripts.Render("~/Content/themes/admin/js/nestable/demo.js")

    <script type="text/javascript">
        var miBaseUrl = '';
        $(function () {
            miBaseUrl = baseURL(window.location.pathname);
        });

        $('#grupoPeriodos li a').on('click', function (event) {
            var pPeriodo = $(this).attr('id');
            actualizarPeriodo(pPeriodo);
        });

        var defaultText = '0';

        function endEdit(e) {
            var input = $(e.target),
                label = input && input.prev();
            //label.text(input.val() === '' ? defaultText : input.val();
            var jValor = parseFloat(input.val()).toFixed(2);
            label.text(input.val() === '' ? defaultText : jValor.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
            input.hide();
            label.show();
        }

        $('.clickedit').hide()
        .focusout(function (e) {
            endEdit(e);
            var jPeriodo = $('#idPeriodo').data('periodo');
            if (jPeriodo == null || jPeriodo == 0) {
                confirm("Necesita seleccionar un periodo para ingresar un monto de presupuesto.");
                return false;
            }
            var pValor = $(this).val();
            var pId = $(this).data('id');
            $("label[data-lblid='" + pId + "']").text(parseFloat(pValor).toFixed(2));
            actualizarPresupuesto(pId, pValor);
            actualizarMontoPadre($(this));
        })
        .keyup(function (e) {
            if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
                endEdit(e);
                var jPeriodo = $('#idPeriodo').data('periodo');
                if (jPeriodo == null || jPeriodo == 0) {
                    confirm("Necesita seleccionar un periodo para ingresar un monto de presupuesto.");
                    return false;
                }
                //var pValor = $(this).val();
                //var pId = $(this).data('id');
                //$("label[data-lblid='" + pId + "']").text(pValor);
                //actualizarPresupuesto(pId, pValor);
                //actualizarMontoPadre($(this));

                return false;
            } else {
                var jPeriodo = $('#idPeriodo').data('periodo');
                if (jPeriodo == null || jPeriodo == 0) {
                    confirm("Necesita seleccionar un periodo para ingresar un monto de presupuesto.");
                    return true;
                }
                var pValor = $(this).val();
                var pId = $(this).data('id')
                $("label[data-lblid='" + pId + "']").text(parseFloat(pValor).toFixed(2));
                actualizarPresupuesto(pId, pValor);
                actualizarMontoPadre($(this));

                return true;
            }
        })
        .prev().click(function () {
            $(this).hide();
            $(this).next().show().focus();
        });

        function actualizarPeriodo(idPeriodo) {
            $.ajax({
                type: "POST",
                url: miBaseUrl + "/ActualizarPeriodo",
                cache: false,
                data: { idPeriodo: idPeriodo },
                dataType: 'text',
                success: function (response) {
                    if (response == "true")
                    { window.location.href = "@Url.Action("Categorias","Admin")"; }
                    else
                    { alert("Error al actualizar el periodo"); }
                }
            });
        }

        function actualizarPresupuesto(idCategoria, Monto) {
            $.ajax({
                type: "POST",
                url: miBaseUrl + "/ActualizarPresupuesto",
                cache: false,
                data: { idCategoria: idCategoria, Monto: Monto },
                dataType: 'json',
                success: function (response) {
                    //console.log(response);
                }
            });
        }

        function actualizarMontoPadre(e) {
            var pValor = e.val();
            var pId = e.data('id');
            var pPadre = e.data('padre');
            var suma = 0;
            $("label[data-lblpadre='" + pPadre + "']").each(function () {
                if (!$(this).hasClass("inactive"))
                { suma += Number($(this).text().replace(/[^0-9\.]+/g, "")); }
            });
            suma = (parseFloat(suma).toFixed(2)).toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
            $("label[data-lblid='" + pPadre + "']").text(suma);
            if (pPadre != 0) {
                actualizarMontoPadre($("input[data-id='" + pPadre + "']"));
            }
        }

        function CheckNumericValue(e) {
            var key = e.which ? e.which : e.keyCode;
            if ((key >= 48 && key <= 57) || key == 13 || key == 8 || key == 9 || key == 27 || key == 46) {
                return true;
            }
            else {
                alert("Solo ingresar caracteres numericos");
                return false;
            }
        }

        $('#modal-form').on('show.bs.modal', function (e) {
            var button = $(e.relatedTarget);
            var idElement = button.data('id');
            var jsNombre = button.data('nombre');
            var modal = $(this);
            modal.find('.modal-title').text('Eliminar Elemento: ' + jsNombre);
            modal.find('.modal-body input').val(idElement);
        });
        $("input#delete").click(function () {
            var idelement = $('form#form-delete').serialize();
            $.ajax({
                type: "POST",
                url: miBaseUrl + "/DeleteCategoria",
                data: idelement,
                success: function (msg) {
                    $("#modal-form").modal('hide');
                    window.location.href = miBaseUrl + "/Categorias";
                },
                error: function () {
                    alert("failure");
                }
            });
        });

    </script>
}
@functions{
    int nivelMax = 5;
    public string printTree(IList<NubeBooks.Core.DTO.CategoriaDTO> categorias, int nivel)
    {
        if (categorias != null && categorias.Count != 0)
        {
            System.Text.StringBuilder output = new System.Text.StringBuilder("<ol class='dd-list'>");

            foreach (NubeBooks.Core.DTO.CategoriaDTO obj in categorias)
            {
                var classInactive = (ViewBag.EsAdmin && !obj.Estado) ? " inactive" : "";
                var styleI = (ViewBag.EsAdmin && !obj.Estado) ? "style='display:none;'" : "";
                output.AppendFormat("<li class='dd-item dd3-item" + classInactive + "' data-id='{0}' " + styleI + "><div class='dd3-content row' style='{1}'><div class='col-md-6'>{2}<b class='badge bg-warning dot {3}'></b></div>", obj.IdCategoria, classInactive != "" ? "color: #f05050;" : (nivel == nivelMax || obj.Hijos.Count == 0) ? "color: #428BCA;" : "", obj.Nombre, obj.Estado ? "green" : "red");

                output.Append("<div class='col-md-3 text-right'>");
                if (obj.Hijos == null || obj.Hijos.Count == 0)
                    output.AppendFormat("<label class='pull-left {4}' data-lblpadre='{0}' data-lblid='{1}'>{2}</label><input class='form-control input-sm clickedit' data-padre='{0}' data-id='{1}' type='text' value='{3}' onkeypress='return CheckNumericValue(event)' />", obj.IdCategoriaPadre.GetValueOrDefault(), obj.IdCategoria, obj.Presupuesto != null ? obj.Presupuesto.GetValueOrDefault().ToString("N2", CultureInfo.InvariantCulture) : "Sin valor", obj.Presupuesto != null ? obj.Presupuesto.GetValueOrDefault().ToString("0.00") : null, classInactive);
                else
                    output.AppendFormat("<label class='pull-left {4}' data-lblpadre='{0}' data-lblid='{1}'>{2}</label><input data-padre='{0}' data-id='{1}' type='hidden' value='{3}' onkeypress='return CheckNumericValue(event)' />", obj.IdCategoriaPadre.GetValueOrDefault(), obj.IdCategoria, obj.Presupuesto != null ? obj.Presupuesto.GetValueOrDefault().ToString("N2", CultureInfo.InvariantCulture) : "Monto Padre", obj.Presupuesto != null ? obj.Presupuesto.GetValueOrDefault().ToString("0.00") : null, classInactive);
                output.Append("</div>");

                output.Append("<div class='col-md-3 text-right'><div class='btn-group'>");
                if (obj.IdCategoriaPadre != null || ViewBag.EsAdmin)
                {
                    output.AppendFormat("<a class='btn-add' href='{0}'><i class='fa fa-pencil'></i>&nbsp;</a>", Url.Action("Categoria", new { id = obj.IdCategoria }));
                    //output.AppendFormat("<a class='btn-add open-modal' data-toggle='modal' data-target='#modal-form' data-id='{0}' data-nombre='{1}'><i class='fa fa-trash'></i>&nbsp;</a>", obj.IdCategoria, obj.Nombre);
                }
                if (nivel < nivelMax) { output.AppendFormat("<a class='btn-add' href='{0}' title='Nueva Categoría Interna'>&nbsp;<i class='fa fa-plus'></i></a>", Url.Action("Categoria", new { id = 0, idPadre = obj.IdCategoria })); }
                output.Append("</div></div></div>");
                if (obj.Hijos != null && obj.Hijos.Count != 0) { output.Append(printTree(obj.Hijos, nivel + 1)); }
                output.Append("</li>");
            }

            output.Append("</ol>");
            return output.ToString();
        }
        else return "";
    }
}
<div class="bg-light lter b-b wrapper-md">
    <div class="btn-group pull-right m-r">
        <button id="nestable-menu" class="btn m-b-xs btn-sm btn-default m-r active" ui-toggle-class="toggle-active">
            <i class="fa fa-plus text"></i>&nbsp;<span class="text">Expandir</span>
            <i class="fa fa-minus text-active"></i>&nbsp;<span class="text-active">Colapsar</span>
        </button>

        <button class="btn m-b-xs btn-sm btn-default m-r" ui-toggle-class="btn-danger" id="btn-showInactive">
            <i class="text"></i>
            <span class="text">Mostrar Inactivos</span>
            <i class="fa icon-ban text-active"></i>
            <span class="text-active">&nbsp;Mostrar Inactivos</span>
        </button>

        <a href="@Url.Action("Categoria")" class="btn m-b-xs btn-sm btn-success btn-addon m-r"><i class="fa fa-plus"></i>Agregar Nuevo</a>

        @{string vOption = "Periodos";}
        <button id="idPeriodo" data-periodo="@ViewBag.IdPeriodo" data-toggle="dropdown" class="btn m-b-xs btn-sm btn-info btn-addon pull-right m-l">
            <i class="icon-calendar"></i>
            @foreach (var item in (List<PeriodoDTO>)ViewBag.Periodos)
            {
                if (item.IdPeriodo == ViewBag.IdPeriodo)
                {
                    vOption = item.Nombre;
                }
            }
            @vOption &nbsp;
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu" id="grupoPeriodos">
            @{string pCadena = "";}
            @foreach (var item in (List<PeriodoDTO>)ViewBag.Periodos)
            {
                pCadena = item.IdPeriodo == ViewBag.IdPeriodo ? "active" : "";
                <li class="@pCadena"><a href="#" id="@item.IdPeriodo">@item.Nombre</a></li>
            }
        </ul>
    </div>

    <h1 class="m-n font-thin h3">@ViewBag.Title (@(ViewBag.SimboloMoneda))</h1>
</div>

<div class="wrapper-md">
    <div class="panel panel-default">
        @Html.Partial("_showAlertMessages")
        <div class="panel-body">
            <div class="row">
                <div class="col-md-6 padder-lg">
                    <label>Partida</label>
                </div>
                <div class="col-md-2 text-center">
                    <label> Monto Sin IGV</label>
                </div>
            </div>
            <div class="col-md-12">
                <div class="dd" id="nestable3">
                    @Html.Raw(printTree(Model, 1))
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade modal-task" id="modal-form">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Eliminar Elemento: </h4>
            </div>
            <div class="modal-body">
                <p>Estas a punto de eliminar este comprobante, al hacerlo también eliminaras los Movimientos asociados a este comprobante. ¿Estás seguro de proseguir?</p>
                <form id="form-delete" class="element" name="element">
                    <input type="hidden" class="form-control" name="id" id="id-element">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <input class="btn btn-danger" type="submit" value="Eliminar" id="delete">
            </div>
        </div>
    </div>
</div>