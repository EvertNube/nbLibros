@using System.Web.Mvc;
@using NubeBooks.Core.DTO;
@model UsuarioDTO
@{ 
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section Scripts{
    <script type="text/javascript">
        $(function () {
            $("#btnChangePassword").click(function () {
                $("#passUser").removeClass("hide").focus();
                $("#passChange").removeClass("hide");
            });
        });
    </script>
}
<section class="vbox">
    <section class="scrollable padder">
        <div class="row m-b">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                @if (Model == null || Model.IdUsuario == 0)
                {
                    <h2>Nuevo Usuario</h2>
                }
                else
                {<h2>Actualizar Usuario</h2>}

                @using (Html.BeginForm("AddUser", "Admin", FormMethod.Post))
                {
                    @Html.ValidationSummary(true)
                    <div class="row m-b">
                        <div class="col-xs-12 col-md-6">
                            @Html.Partial("_showAlertMessages")

                            <section class="panel panel-default">
                                <header class="panel-heading font-bold">Formulario de Registro</header>
                                <div class="panel-body">
                                    <div class="form-group">
                                        <label>Nombre</label>
                                        @if(Model.IdUsuario == 0)
                                        {
                                            @Html.TextBoxFor(u => u.Nombre, new { @class = "form-control", @placeholder = "Ingrese su nombre completo", @type = "text" })
                                            @Html.ValidationMessageFor(u => u.Nombre)
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(u => u.Nombre, new { @class = "form-control", @placeholder = "Ingrese su nombre completo", @type = "text", @disabled = "disabled" })
                                        }
                                    </div>
                                    <div class="form-group">
                                        <label>Nombre Corto</label>
                                        @Html.TextBoxFor(u => u.InicialesNombre, new { @class = "form-control", @placeholder = "Ingrese iniciales del nombre.", @type = "text" })
                                        @Html.ValidationMessageFor(u => u.InicialesNombre)
                                    </div>
                                    <div class="form-group">
                                        <label>Correo Electrónico</label>
                                        @Html.TextBoxFor(u => u.Email, new { @class = "form-control", @placeholder = "Ingrese su correo", @type = "email" })
                                        @Html.ValidationMessageFor(u => u.Email)
                                    </div>
                                    @if (ViewBag.EsAdmin)
                                    {
                                        var rol = "Sin Rol";
                                        if(Model != null)
                                        {
                                            rol = Model.NombreRol;
                                        }
                                        <div class="form-group">
                                            @*<label>Rol Actual : <font color="#3498db">@rol</font></label>*@
                                            <label>Rol</label>
                                            @*@Html.DropDownListFor(u => u.IdRol, new SelectList(ViewBag.vbRls, "IdRol", "Nombre", Model != null ? (Model.IdRol != null ? Model.IdRol : 0) : 0), new { @class = "form-control parsley-validated" })*@
                                            <select class="form-control parsley-validated" data-val="true" data-val-number="The field IdRol must be a number." data-val-required="The IdRol field is required." id="IdRol" name="IdRol">
                                                @{var rRol = Model != null ? Model.IdRol : 0; }
                                                @foreach (var item in (List<RolDTO>)ViewBag.vbRls)
                                                {
                                                    <option value="@item.IdRol" @(item.IdRol == rRol ? "selected=selected" : "")>@item.Nombre</option>
                                                }
                                            </select>
                                            @Html.ValidationMessageFor(u => u.IdRol)
                                        </div>
                                        
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            <label>Rol</label><br />
                                            @Html.Label(@Model.NombreRol, new { @class = "form-control", @type = "text" })
                                                
                                            @Html.TextBoxFor(u => u.IdRol, new { @value = Model != null ? Model.IdRol.ToString() : "", @type = "hidden" })
                                            @Html.TextBoxFor(u => u.NombreRol, new { @value = Model != null ? Model.NombreRol : "", @type = "hidden" })
                                        </div>
                                    }

                                    <div class="line line-dashed line-lg pull-in"></div>
                                    <div class="form-group">
                                        <label>Cuenta</label>
                                        @Html.TextBoxFor(u => u.Cuenta, new { @class = "form-control", @placeholder = "Ingrese el nombre de la cuenta", @type = "text" })
                                        @Html.ValidationMessageFor(u => u.Cuenta)
                                    </div>
                                    <div class="form-group">
                                        <label>Password</label><br>
                                        @if (Model != null && Model.IdUsuario > 0)
                                        {
                                            var user = (NubeBooks.Core.DTO.UsuarioDTO)HttpContext.Current.Session["User"];
                                            if (ViewBag.EsAdmin || Model.IdUsuario == user.IdUsuario)
                                            {
                                                <button type="button" class="btn btn-sm btn-info" id="btnChangePassword">Cambiar contraseña</button><br /><br />
                                                <input type="password" class="form-control hide" name="passUser" id="passUser" placeholder="Contraseña actual" /><br />
                                                <input type="password" class="form-control hide" name="passChange" id="passChange" placeholder="Nueva contraseña" />
                                                @Html.TextBoxFor(u => u.Pass, new { @class = "form-control", @placeholder = "Ingrese su contraseña", @type = "hidden" })
                                            }
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(u => u.Pass, new { @class = "form-control", @placeholder = "Ingrese su contraseña", @type = "password" })
                                            @Html.ValidationMessageFor(u => u.Pass)
                                        }
                                    </div>
                                    @if (ViewBag.EsAdmin && Model != null && Model.IdUsuario > 0)
                                    {
                                        <div class="line line-dashed line-lg pull-in"></div>
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(u => u.Active)
                                                Activo
                                            </label>
                                            @Html.ValidationMessageFor(u => u.Active)
                                        </div>}
                                    else
                                    {
                                        @Html.TextBoxFor(u => u.Active, new { @value = Model != null ? Model.Active : false, @type = "hidden" })
                                    }
                                    <div class="line line-dashed line-lg pull-in"></div>
                                    @Html.TextBoxFor(u => u.IdEmpresa, new { @value = Model.IdEmpresa, @type = "hidden" })
                                    @Html.TextBoxFor(u => u.IdUsuario, new { @value = Model.IdUsuario != 0 ? Model.IdUsuario.ToString() : "", @type = "hidden" })
                                    @{var btnName = (Model != null && Model.IdUsuario > 0) ? "Guardar Cambios" : "Crear";}
                                    <button type="submit" class="btn btn-sm btn-success">@btnName</button>
                                    @if (ViewBag.EsAdmin)
                                    {
                                        <a class="btn btn-sm btn-danger" href="@Url.Action("Usuarios")">Salir</a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-sm btn-danger" href="@Url.Action("Index")">Salir</a>
                                    }
                                </div>
                            </section>
                        </div>
                    </div>
                }
            </div>
        </div>

    </section>
</section>
